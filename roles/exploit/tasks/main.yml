---

- name: Copiar contenido web spoof
  ansible.builtin.copy:
    src: sites.tar
    dest: /tmp/sites.tar

- name: Unarchive sites
  ansible.builtin.unarchive:
    src: /tmp/sites.tar
    dest: /tmp/

- name: Block
  block:
    - name: Stat carpeta
      ansible.builtin.stat:
        path: /var/www/html
      register: carpeta

    - name: Eliminar carpeta
      ansible.builtin.file:
        path: /var/www/html
        state: absent
      when: carpeta.stat.exists

- name: Crear carpeta
  ansible.builtin.file:
    path: /var/www/html
    state: directory
    owner: "{{ owner }}"
    group: "{{ owner }}"
    mode: '0755'

- name: Copy to apache
  ansible.builtin.copy:
    src: "/tmp/sites/{{ web_spoof }}/"
    dest: /var/www/html
    remote_src: true

- name: Cambiar permisos
  ansible.builtin.file:
    path: /var/www/html
    owner: "{{ owner }}"
    group: "{{ owner }}"
    mode: '0777'
    recurse: true

- name: Permitir write en Selinux
  ansible.builtin.command:
    chdir: /var/www/html
    cmd: "{{ item }}"
  loop:
    - semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/usernames.txt'
    - restorecon -v '/var/www/html/usernames.txt'
  when: ansible_os_family == "RedHat"

- name: Eliminar carpeta /tmp
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/sites
    - /tmp/sites.tar

- name: "Reiniciar apache/httpd"
  ansible.builtin.service:
    name: "{{ web_service }}"
    state: restarted
        

# - name: Ataque arpspoofing
#   arp_dns_spoofing:
#     interface: "{{ interface }}"
#     target: "{{ target }}"
#     gateway: "{{ gateway }}"
#     state: arpspoofing
#   async: 10000000000000000000000
#   poll: 0

# - name: Ataque dnsspoofing
#   arp_dns_spoofing:
#     interface: "{{ interface }}"
#     file: 
#     state: dnsspoofing


...